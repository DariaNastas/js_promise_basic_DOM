{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAE5C,IAAM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EAGE,AAFa,SAAS,aAAa,CAAC,SAE/B,gBAAgB,CAAC,QAAS,WAC7B,GACF,EACF,GAIM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,yBACnB,EAAG,IACL,GAGM,EAAU,WACd,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,CAAA,EAAQ,SAAS,CAAG,UACpB,EAAQ,WAAW,CAAG,wBACtB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAGM,EAAQ,WACZ,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,CAAA,EAAQ,SAAS,CAAG,wBACpB,EAAQ,WAAW,CAAG,wBACtB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAGA,EAAS,IAAI,CAAC,GAAS,KAAK,CAAC,GAC7B,EAAS,IAAI,CAAC,GAAS,KAAK,CAAC,EAC/B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // Створюємо перший Promise, який вирішується при кліку на .logo\n    var promise1 = new Promise(function(resolve) {\n        var logo = document.querySelector(\".logo\");\n        logo.addEventListener(\"click\", function() {\n            resolve();\n        });\n    });\n    // Створюємо другий Promise, який відхиляється через 3 секунди\n    var promise2 = new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            reject(new Error(\"Promise was rejected!\"));\n        }, 3000);\n    });\n    // Обробник успіху\n    var success = function() {\n        var message = document.createElement(\"div\");\n        message.className = \"message\";\n        message.textContent = \"Promise was resolved!\";\n        document.body.appendChild(message);\n    };\n    // Обробник помилок\n    var error = function() {\n        var message = document.createElement(\"div\");\n        message.className = \"message error-message\";\n        message.textContent = \"Promise was rejected!\";\n        document.body.appendChild(message);\n    };\n    // Додаємо обробники до promise1 та promise2\n    promise1.then(success).catch(error);\n    promise2.then(success).catch(error);\n});\n\n//# sourceMappingURL=index.eeecd955.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Створюємо перший Promise, який вирішується при кліку на .logo\n  const promise1 = new Promise((resolve) => {\n    const logo = document.querySelector('.logo');\n\n    logo.addEventListener('click', () => {\n      resolve();\n    });\n  });\n\n  // Створюємо другий Promise, який відхиляється через 3 секунди\n\n  const promise2 = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new Error('Promise was rejected!'));\n    }, 3000);\n  });\n\n  // Обробник успіху\n  const success = () => {\n    const message = document.createElement('div');\n\n    message.className = 'message';\n    message.textContent = 'Promise was resolved!';\n    document.body.appendChild(message);\n  };\n\n  // Обробник помилок\n  const error = () => {\n    const message = document.createElement('div');\n\n    message.className = 'message error-message';\n    message.textContent = 'Promise was rejected!';\n    document.body.appendChild(message);\n  };\n\n  // Додаємо обробники до promise1 та promise2\n  promise1.then(success).catch(error);\n  promise2.then(success).catch(error);\n});\n"],"names":["document","addEventListener","promise1","Promise","resolve","logo","querySelector","promise2","reject","setTimeout","Error","success","message","createElement","className","textContent","body","appendChild","error","then","catch"],"version":3,"file":"index.eeecd955.js.map"}